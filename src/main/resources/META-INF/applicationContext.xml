<?xml version="1.0" encoding="UTF-8"?>

<!-- This is the big "beans" tag declaration with all Spring namespaces used. As we use a lot of convenient notations, we use a lot of namespaces... -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:security="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!-- JPA 2 integration main bean which is linked on the DataSource and the persitence unit name -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="skillBrowserUnit" />
	</bean>

	<!-- Spring Data JPA configuration which only specified the package containing the repository interfaces -->
	<jpa:repositories base-package="com.developpez.skillbrowser.repository" />

	<!-- Spring framework annotation configuration trigger -->
	<context:annotation-config />

	<!-- Spring managed transaction manager declaration -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Spring transaction management with annotation trigger -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Spring bean scanner which will browse all the application to look for annotated beans -->
	<context:component-scan base-package="com.developpez.skillbrowser">
		<!-- Controller annotated bean are designed to be only in the Spring MVC context. This configuration allow us to scan the all application package and 
			it will ignore controller beans -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Spring Security special HTTP filter authorization on the login command -->
	<security:http security="none" pattern="/rest/login" />

	<!-- Spring Security entry point which only send an HTTP 403 Forbidden in case of bad authentication. This has to be explicitely defined because the default 
		handling is now to forward on an automatically generated login page which is not what we want for an Ajax login -->
	<bean id="http403ForbiddenEntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />

	<!-- Spring Security main HTTP filter -->
	<security:http entry-point-ref="http403ForbiddenEntryPoint">
		<!-- The filter is mapped on every request in /rest/** and require a "ROLE_USER" profile -->
		<security:intercept-url pattern="/rest/**" access="ROLE_USER" />
		<!-- Remember me mechanism trigger -->
		<security:remember-me />
	</security:http>

	<!-- Spring Security authentication manager, an alias is created to inject it into the LoginController -->
	<security:authentication-manager alias="authenticationManager">
		<!-- The application user service is used as the Spring Security authentication provider -->
		<security:authentication-provider user-service-ref="userServiceImpl" />
	</security:authentication-manager>

</beans>